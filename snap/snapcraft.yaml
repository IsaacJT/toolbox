name: toolbox
version: "0.7.27"
summary: Swiss knife of shell tools
description: |
  Set of usefull shell tools to be used on Ubuntu/Ubuntu core After install run follwing commands to enable all built in tools in your shell.
  $ snap connect toolbox:home
  $ toolbox.set-path &gt;&gt; ~/.bashrc
  Logout and log back in. Or $ source ~/.bashrc
  Now all included tools should be in your path, and running unconfined :)
  This is one time setup, when new tools are added they are automatically included in the path.

confinement: strict
grade: stable
architectures:
    - build-on: armhf
    - build-on: arm64
    - build-on: i386
    - build-on: amd64
    - build-on: ppc64el

base: core18

environment:
    PATH:            $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
    LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/${SNAPCRAFT_ARCH_TRIPLET}:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
    ARCH_TRIPLET:    ${SNAPCRAFT_ARCH_TRIPLET}

apps:
    help:
        command: bin/toolbox-help
        adapter: none

    set-path:
        command: bin/set-path
        adapter: none

parts:
    tools:
        source: glue
        plugin: dump
        stage-packages:
          - bash-completion
          - bc
          - wget
          - nano
          - silversearcher-ag
          - pastebinit
          - curl
          - binutils
          - screen
          - tree
          - zip
          - unzip
          - vim
          - vim-tiny
          - vim-common
          - vim-runtime
          - lsof
          - iotop
          - hdparm
          - rhash
          - ethtool
          - i2c-tools
          - cryptsetup-bin
          - libgpm2
          - dmsetup
          - device-tree-compiler
          - strace
          - rsync
          - iperf3
          - net-tools
          - psmisc
          - libdb5.3
          - htop
          - devmem2
          - busybox-static
          - lshw
          - pciutils
          - bash
          - httpie
          - dnsutils
          - util-linux
          - jq
          - minicom
          - wireless-tools
          - iw
          - watchdog
          - rng-tools5
          - u-boot-tools
          - icdiff
          - cpio
          - xz-utils
          - libslang2
          - ssh-import-id
          - stress-ng
          - cpu-checker
          - tmux
          - byobu
          - gdisk
          - smartmontools
          - file
          - abootimg
          - mkbootimg
          - liblz4-tool
          - libmagic1
          - netdiscover
          - bsdmainutils
          - initramfs-tools-core
          - time
          - linux-tools-common
          - fio
          - mmc-utils
          - gdb
          - pv
          - try:
              - libonig4
              - sysbench
          - on ppc64el:
              - usbutils
        stage:
          - -bin/bash
          - -usr/bin/perl*
          - -usr/bin/py*
          - -usr/lib/gcc
          - -usr/lib/*/perl*
          - -usr/lib/*/libperl*
          - -usr/lib/python3/dist-packages/R*
          - -usr/lib/python3/dist-packages/c*
          - -usr/lib/python3/dist-packages/h*
          - -usr/lib/python3/dist-packages/idna*
          - -usr/lib/python3/dist-packages/pygments
          - -usr/lib/python3/dist-packages/r*
          - -usr/lib/python3/dist-packages/six*
          - -usr/lib/python3/dist-packages/u*
          - -usr/lib/python3.*
          - -usr/share/doc
          - -usr/share/locale
          - -usr/share/man/
          - -usr/share/perl*
          - -usr/share/python*
          - -usr/share/vim
          # make sure we do not have pulled in lsb_release, it makes no sense
          - -usr/bin/lsb_release
        override-build: |
            snapcraftctl build
            echo "Checking if usr/bin/peekfd exists"
            # interestingly on arm64 there is no usr/bin/peekfd, account for this
            if [ ! -f ${SNAPCRAFT_PART_INSTALL}/usr/bin/peekfd ]; then
                echo "adding stub for usr/bin/peekfd"
                echo "#!/bin/bash" > ${SNAPCRAFT_PART_INSTALL}/usr/bin/peekfd
                echo "echo 'peekfd is not supported on arm64'" >> ${SNAPCRAFT_PART_INSTALL}/usr/bin/peekfd
                chmod +x ${SNAPCRAFT_PART_INSTALL}/usr/bin/peekfd
            fi
            sed -i \
                's|/usr/share/bash-completion|${SNAP_TOOLBOX}/usr/share/bash-completion|g' \
                ${SNAPCRAFT_PART_INSTALL}/etc/profile.d/bash_completion.sh
            # source lxd bash completion if present
            echo "[ -f /snap/lxd/current/etc/bash_completion.d/snap.lxd.lxc ] && . /snap/lxd/current/etc/bash_completion.d/snap.lxd.lxc" \
                 >> ${SNAPCRAFT_PART_INSTALL}/etc/profile.d/bash_completion.sh
            # source git-ondra bash completion if present
            echo "[ -f /snap/git-ondra/current/git-completion.bash ] && . /snap/git-ondra/current/git-completion.bash" \
                 >> ${SNAPCRAFT_PART_INSTALL}/etc/profile.d/bash_completion.sh
            # fix pastebin to work with toolbox snap install
            sed -i \
                's|/usr/local/etc/pastebin.d|/snap/toolbox/current/usr/share/pastebin.d|g' \
                ${SNAPCRAFT_PART_INSTALL}/usr/bin/pastebinit
            # fix ssh_import_id search path for etc/ssh/ssh_import_id
            sed -i \
                's|\(conf_file = \).*|\1os.path.join(os.getenv("SNAP"), "etc/ssh/ssh_import_id")|g' \
                ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages/ssh_import_id/__init__.py

    mc:
        source: https://github.com/MidnightCommander/mc.git
        plugin: autotools
        configflags:
            - --prefix=/snap/toolbox/current/usr
            - --sysconfdir=/var/snap/toolbox/common/etc
            - --without-x
        override-build: |
            snapcraftctl build
            mv ${SNAPCRAFT_PART_INSTALL}/snap/toolbox/current/usr ${SNAPCRAFT_PART_INSTALL}/
            rm -rf ${SNAPCRAFT_PART_INSTALL}/snap
            mv ${SNAPCRAFT_PART_INSTALL}/var/snap/toolbox/common/etc ${SNAPCRAFT_PART_INSTALL}/
            rm -rf ${SNAPCRAFT_PART_INSTALL}/var

    usbutils:
        source: https://git.launchpad.net/ubuntu/+source/usbutils
        source-branch: ubuntu/bionic
        source-type: git
        plugin: autotools
        stage-packages: [libusb-1.0-0]
        configflags:
            - --prefix=/snap/${SNAPCRAFT_PROJECT_NAME}/current/usr
            - --libdir=/snap/${SNAPCRAFT_PROJECT_NAME}/current/usr/lib
            - --localstatedir=/var/snap/${SNAPCRAFT_PROJECT_NAME}/common/
        override-pull: |
            snapcraftctl pull
            quilt push -afq --leave-rejects --quiltrc=${SNAPCRAFT_PROJECT_DIR}/quiltrc
        override-build: |
           if [ -z $(uname -a | grep "ppc64el") ]; then
               snapcraftctl build
           fi
        organize:
            snap/${SNAPCRAFT_PROJECT_NAME}/current/usr/: usr/
        stage:
            - -snap

    macchanger:
        plugin: autotools
        source: https://github.com/alobbs/macchanger.git
        source-type: git
        configflags:
            - --datadir=/snap/${SNAPCRAFT_PROJECT_NAME}/current/usr/share/
        organize:
            snap/${SNAPCRAFT_PROJECT_NAME}/current/usr/share/: usr/share/
        stage:
            - -snap/

    resty:
        plugin: nil
        source: https://github.com/micha/resty.git
        override-build: |
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/bin
            cp pp pypp ${SNAPCRAFT_PART_INSTALL}/usr/bin
            cp resty ${SNAPCRAFT_PART_INSTALL}/usr/bin
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/share/bash-completion/completions/
            curl -o ${SNAPCRAFT_PART_INSTALL}/usr/share/bash-completion/completions/httpie https://raw.githubusercontent.com/jakubroztocil/httpie/master/extras/httpie-completion.bash

    rt-tests:
        source: git://git.kernel.org/pub/scm/linux/kernel/git/clrkwllms/rt-tests.git
        plugin: make
        stage-packages:
            - libnuma1
        organize:
            usr/local/: usr/
        override-build: |
            snapcraftctl build
        stage:
            - -usr/bin/hwlatdetect

    mountinfo-tool:
        plugin: nil
        override-pull: |
            wget https://raw.githubusercontent.com/snapcore/snapd/master/tests/lib/tools/mountinfo.query
        override-build: |
            cp mountinfo.query ${SNAPCRAFT_PART_INSTALL}/
        organize:
            mountinfo.query: bin/mountinfo.query

    lk-boot-env:
        plugin: nil
        override-pull: |
          snapcraftctl pull
          wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_common.h
          wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_v1.h
          wget https://raw.githubusercontent.com/kubiko/if6640-gadget/18/snap-boot-sel/lk-boot-env.c
        override-build: |
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin
            gcc lk-boot-env.c -I/usr/include/ -Iapp/aboot -o ${SNAPCRAFT_PART_INSTALL}/bin/lk-boot-env

    mosh:
        plugin: autotools
        source: https://github.com/mobile-shell/mosh.git
        source-type: git
        configflags:
          - "LDFLAGS=-static"
        stage:
          - bin/mosh-server
          - bin/mosh

    tiobench:
        plugin: nil
        source: https://github.com/mkuoppal/tiobench.git
        source-type: git
        override-build: |
            make -j$(nproc)
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin \
                     ${SNAPCRAFT_PART_INSTALL}/usr/doc/tiobench
            install -m 0755 tiobench.pl ${SNAPCRAFT_PART_INSTALL}/bin/tiobench.pl
            install -m 0755 tiotest     ${SNAPCRAFT_PART_INSTALL}/bin/tiotest
            install -m 0755 scripts/bigbench.sh ${SNAPCRAFT_PART_INSTALL}/bin/bigbench.sh
            install -m 0755 scripts/tiosum.pl ${SNAPCRAFT_PART_INSTALL}/bin/tiosum.pl
            install -m 0644 README.md ${SNAPCRAFT_PART_INSTALL}/usr/doc/tiobench/README.md
            install -m 0644 scripts/README ${SNAPCRAFT_PART_INSTALL}/usr/doc/tiobench/README
        stage:
            - bin/tio*
            - bin/bigbench*
            - usr/doc/tiobench

build-packages:
    - curl
    - libnuma-dev
    - python2.7
    - libusb-1.0-0-dev
    - zlib1g
    - gawk
    - pkg-config
    - libudev-dev
    - quilt
    - wget
    - libglib2.0-dev
    - libslang2-dev
    - gettext
    - libtool
    - g++
    - protobuf-compiler
    - libprotobuf-dev
    - libboost-dev
    - libncurses5-dev
    - zlib1g-dev
    - libssl-dev
    - texinfo
